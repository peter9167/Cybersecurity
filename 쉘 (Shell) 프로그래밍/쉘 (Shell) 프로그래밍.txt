쉘 프로그래밍이란?

 # 쉘이란 무엇인가?
  - 사용자와 커널 간 인터페이스 역할을 하는 프로그램

                    사용자  <->  쉘  <->  커널

쉘은 사용자와 커널 간 인터페이스 역할을 하는 프로그램
다양한 쉘 존재함

사용자 : 로그인 후 쉘을 사용하여 시스템의 명령을 실행 하도록 함.
쉘       : 쉘은 사용자로부터 받은 명령을 해석하여 명령 옵션 인적 값이 정확한지 확인 한 후 커널의 처리를 요청
커널    : 하드웨어 자원을 적절히 사용해서 일을 처리한 후 결과를 반환 / 사용자가 알아볼 수 있는 형태로 출력


 # 쉘 스크립트란 무엇인가?
  - 텍스트 또는 프로그램
  - 리눅스/유닉스 쉘에 의해 실행되도록 설계된 프로그램

   쉘 스크립트 파일
    - 내장 명령, 함수, 변수, 문법 (조건문, 반복문, 선택문), 리눅스 등
    - 컴파일 언어와 다르게 쉘 프로그램은 인터프리터 인어이다.
    - 파일 내용이 텍스트로 조정되며 쉘에 의해 읽혀 실행됨

 # 쉘 프로그래밍이란 무엇인가?
  - 쉘의 내장된 기능 및 리눅스 명령들을 사용한 프로그램 만들기

#######################################################
#######################################################
쉘 스크립트 구조

 * 쉘 스크립트 구조

  #! 인터프리터(Interpreter) [옵션]   #!  <= 셔뱅(Shebang) / 해시뱅(Hashbang) 만약 인터프리터에 #! /bin/bash 라고 하면 스크립트 내용을 bash쉘로 처리
  #
  # 주석(Comment)

  함수명 () {
   명령
   ...
  )
  변수1=값
  변수2=값

  # 주석(Comment)

  쉘/문법(조건, 선택, 반복)
  명령
   ...

  # 주석(Comment)

  함수호출

------------------------------------------------------------

 * 쉘스크립트를 잘 만들 수 있는 방법
  - 시스템 관리 관련 명령을 잘 알아야 함.
  - 작업을 위해 사용될 명령들과 명령 순서를 알아야 함.
  - 쉘 스크립트 작성 전 사용할 명령들, 실행 순서, 실행 조건을 노트에 미리 적어봄.


#######################################################
#######################################################
리눅스 신규 디스크 인식 쉘 스크립트 

 - 스크립트 내용 이해를 위해 리눅스 기초 및 관리 기술을 알아야 함.
 - 쉘 스크립트 생선 전 사용할 명령들을 나열해보는 것이 필요.


 ** 신규 디스크 인식 **
  1. 정보 확인
   - lspci
   - grep
   - awk
  2. 파일 검색
   - find
   - grep
  3. 디스크 인식
   - echo
   - tee
  4. 디스크 확인
   - lsblk

1. 정보 확인
 - 디스크 컨트롤러 (HBA : Host Bus Adapter) 정보 확인
 - /sys/devices 디렉터리에 디스크 컨트롤러에 관련된 scan 파일 존재

2. 파일검색
 - /sys/devices 디렉터리에서 scan 파일 검색 

3. 디스크 인식
 - scan 파일에 디스크 인식을 위한 Wildcard 문자 전달
 - 여기서 '-' (Dash) 기호는 All의 뜻을 가지고 있음.
 - '---'는 모든 채널(Channel), 모든 타겟(TArget), 모든 LUN을 나타냄.


자세한 내용은 https://www.youtube.com/watch?v=59by9c2eylc&list=PLTJfebMjBKSLv0yQrgCOBLZtvBBD5lWqu&index=4


#######################################################
#######################################################
Bash 쉘 초기화 파일

 - 사용자 로그인 시 쉘이 호출될 때 쉘 자체 및 사용자 환경을 설정하는데 사용되는 파일.
 - 보통 지역/환경 변수, 별칭, 함수 umask 값을 설정하기 위해 사용.
 - System-wide files : 관련 쉘을 사용하는 사용자 전체에게 영향을 끼치는 파일.
 - User Configuration files : 해당 사용자에게만 영향을 끼치는 파일.


  System-wide		User Configuration

   - /etc/profile		- $HOME/.bash_profile
   - /etc/bashrc		- $HOME/.bashrc
			- $HOME/.bash logout